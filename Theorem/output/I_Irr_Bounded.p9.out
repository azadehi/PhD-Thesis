============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 12457 was started by aidin12 on aidin12-HP-Pavilion-dv7-Notebook-PC,
Sat Sep 19 04:49:25 2020
The command was "/home/aidin12/macleod/Reasoning/prover9_bin/prover9 -t100 -f /home/aidin12/macleod/ontologies/after2/Theorems/conversions/I_Irr_Bounded.all.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /home/aidin12/macleod/ontologies/after2/Theorems/conversions/I_Irr_Bounded.all.p9


formulas(assumptions).
-(all x (-(exists z B(z,x)) | -I(x,x))).
(all x all y ((-I(x,y) | P(x,y) & (all z (-B(z,y) | D(z,x)))) & (-(P(x,y) & (all z (-B(z,y) | D(z,x)))) | I(x,y)))).
(all x all y (-B(x,y) | PP(x,y))).
(all x all y all z (-(B(x,y) & B(y,z)) | B(x,z))).
(all x all y all z (-(P(x,y) & B(y,z)) | B(x,z))).
(all x all y all z (-(B(x,y) & P(y,z)) | P(x,z))).
(all x (x = null | P(x,x))).
(all x all y (-(P(x,y) & P(y,x)) | x = y)).
(all x all y all z (-(P(x,y) & P(y,z)) | P(x,z))).
(all x ((x != null | (all y (-P(y,x) & -P(x,y)))) & (-(all y (-P(y,x) & -P(x,y))) | x = null))).
(all x all y ((-PP(x,y) | P(x,y) & -P(y,x)) & (-(P(x,y) & -P(y,x)) | PP(x,y)))).
(all x all y ((-D(x,y) | -O(x,y)) & (O(x,y) | D(x,y)))).
(all x all y ((-O(x,y) | (exists z (P(z,x) & P(z,y)))) & (-(exists z (P(z,x) & P(z,y))) | O(x,y)))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 100).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 -(all x (-(exists z B(z,x)) | -I(x,x))) # label(non_clause).  [assumption].
2 (all x all y ((-I(x,y) | P(x,y) & (all z (-B(z,y) | D(z,x)))) & (-(P(x,y) & (all z (-B(z,y) | D(z,x)))) | I(x,y)))) # label(non_clause).  [assumption].
3 (all x all y (-B(x,y) | PP(x,y))) # label(non_clause).  [assumption].
4 (all x all y all z (-(B(x,y) & B(y,z)) | B(x,z))) # label(non_clause).  [assumption].
5 (all x all y all z (-(P(x,y) & B(y,z)) | B(x,z))) # label(non_clause).  [assumption].
6 (all x all y all z (-(B(x,y) & P(y,z)) | P(x,z))) # label(non_clause).  [assumption].
7 (all x (x = null | P(x,x))) # label(non_clause).  [assumption].
8 (all x all y (-(P(x,y) & P(y,x)) | x = y)) # label(non_clause).  [assumption].
9 (all x all y all z (-(P(x,y) & P(y,z)) | P(x,z))) # label(non_clause).  [assumption].
10 (all x ((x != null | (all y (-P(y,x) & -P(x,y)))) & (-(all y (-P(y,x) & -P(x,y))) | x = null))) # label(non_clause).  [assumption].
11 (all x all y ((-PP(x,y) | P(x,y) & -P(y,x)) & (-(P(x,y) & -P(y,x)) | PP(x,y)))) # label(non_clause).  [assumption].
12 (all x all y ((-D(x,y) | -O(x,y)) & (O(x,y) | D(x,y)))) # label(non_clause).  [assumption].
13 (all x all y ((-O(x,y) | (exists z (P(z,x) & P(z,y)))) & (-(exists z (P(z,x) & P(z,y))) | O(x,y)))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
B(c2,c1).  [clausify(1)].
I(c1,c1).  [clausify(1)].
-I(x,y) | P(x,y).  [clausify(2)].
-I(x,y) | -B(z,y) | D(z,x).  [clausify(2)].
-P(x,y) | B(f1(x,y),y) | I(x,y).  [clausify(2)].
-P(x,y) | -D(f1(x,y),x) | I(x,y).  [clausify(2)].
-B(x,y) | PP(x,y).  [clausify(3)].
-B(x,y) | -B(y,z) | B(x,z).  [clausify(4)].
-P(x,y) | -B(y,z) | B(x,z).  [clausify(5)].
-B(x,y) | -P(y,z) | P(x,z).  [clausify(6)].
null = x | P(x,x).  [clausify(7)].
-P(x,y) | -P(y,x) | y = x.  [clausify(8)].
-P(x,y) | -P(y,z) | P(x,z).  [clausify(9)].
null != x | -P(y,x).  [clausify(10)].
null != x | -P(x,y).  [clausify(10)].
P(f2(x),x) | P(x,f2(x)) | null = x.  [clausify(10)].
-PP(x,y) | P(x,y).  [clausify(11)].
-PP(x,y) | -P(y,x).  [clausify(11)].
-P(x,y) | P(y,x) | PP(x,y).  [clausify(11)].
-D(x,y) | -O(x,y).  [clausify(12)].
O(x,y) | D(x,y).  [clausify(12)].
-O(x,y) | P(f3(x,y),x).  [clausify(13)].
-O(x,y) | P(f3(x,y),y).  [clausify(13)].
-P(x,y) | -P(x,z) | O(y,z).  [clausify(13)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating I/2
14 -I(x,y) | P(x,y).  [clausify(2)].
15 I(c1,c1).  [clausify(1)].
Derived: P(c1,c1).  [resolve(14,a,15,a)].
16 -I(x,y) | -B(z,y) | D(z,x).  [clausify(2)].
Derived: -B(x,c1) | D(x,c1).  [resolve(16,a,15,a)].
17 -P(x,y) | B(f1(x,y),y) | I(x,y).  [clausify(2)].
Derived: -P(x,y) | B(f1(x,y),y) | -B(z,y) | D(z,x).  [resolve(17,c,16,a)].
18 -P(x,y) | -D(f1(x,y),x) | I(x,y).  [clausify(2)].
Derived: -P(x,y) | -D(f1(x,y),x) | -B(z,y) | D(z,x).  [resolve(18,c,16,a)].

Eliminating PP/2
19 -PP(x,y) | P(x,y).  [clausify(11)].
20 -B(x,y) | PP(x,y).  [clausify(3)].
Derived: P(x,y) | -B(x,y).  [resolve(19,a,20,b)].
21 -PP(x,y) | -P(y,x).  [clausify(11)].
Derived: -P(x,y) | -B(y,x).  [resolve(21,a,20,b)].
22 -P(x,y) | P(y,x) | PP(x,y).  [clausify(11)].

Eliminating O/2
23 O(x,y) | D(x,y).  [clausify(12)].
24 -D(x,y) | -O(x,y).  [clausify(12)].
25 -O(x,y) | P(f3(x,y),x).  [clausify(13)].
Derived: P(f3(x,y),x) | D(x,y).  [resolve(25,a,23,a)].
26 -O(x,y) | P(f3(x,y),y).  [clausify(13)].
Derived: P(f3(x,y),y) | D(x,y).  [resolve(26,a,23,a)].
27 -P(x,y) | -P(x,z) | O(y,z).  [clausify(13)].
Derived: -P(x,y) | -P(x,z) | -D(y,z).  [resolve(27,c,24,b)].
Derived: -P(x,y) | -P(x,z) | P(f3(y,z),y).  [resolve(27,c,25,a)].
Derived: -P(x,y) | -P(x,z) | P(f3(y,z),z).  [resolve(27,c,26,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, P, B, D ]).
Function symbol precedence:  function_order([ null, c1, c2, f1, f3, f2 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      28 B(c2,c1).  [clausify(1)].
kept:      29 -B(x,y) | -B(y,z) | B(x,z).  [clausify(4)].
kept:      30 -P(x,y) | -B(y,z) | B(x,z).  [clausify(5)].
kept:      31 -B(x,y) | -P(y,z) | P(x,z).  [clausify(6)].
kept:      32 null = x | P(x,x).  [clausify(7)].
kept:      33 -P(x,y) | -P(y,x) | y = x.  [clausify(8)].
kept:      34 -P(x,y) | -P(y,z) | P(x,z).  [clausify(9)].
kept:      35 null != x | -P(y,x).  [clausify(10)].
kept:      36 null != x | -P(x,y).  [clausify(10)].
kept:      37 P(f2(x),x) | P(x,f2(x)) | null = x.  [clausify(10)].
kept:      38 P(c1,c1).  [resolve(14,a,15,a)].
kept:      39 -B(x,c1) | D(x,c1).  [resolve(16,a,15,a)].
kept:      40 -P(x,y) | B(f1(x,y),y) | -B(z,y) | D(z,x).  [resolve(17,c,16,a)].
kept:      41 -P(x,y) | -D(f1(x,y),x) | -B(z,y) | D(z,x).  [resolve(18,c,16,a)].
kept:      42 P(x,y) | -B(x,y).  [resolve(19,a,20,b)].
kept:      43 -P(x,y) | -B(y,x).  [resolve(21,a,20,b)].
kept:      44 P(f3(x,y),x) | D(x,y).  [resolve(25,a,23,a)].
kept:      45 P(f3(x,y),y) | D(x,y).  [resolve(26,a,23,a)].
kept:      46 -P(x,y) | -P(x,z) | -D(y,z).  [resolve(27,c,24,b)].
kept:      47 -P(x,y) | -P(x,z) | P(f3(y,z),y).  [resolve(27,c,25,a)].
kept:      48 -P(x,y) | -P(x,z) | P(f3(y,z),z).  [resolve(27,c,26,a)].
kept:      49 -P(x,y) | -D(y,y).  [factor(46,a,b)].
kept:      50 -P(x,y) | P(f3(y,y),y).  [factor(47,a,b)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
28 B(c2,c1).  [clausify(1)].
29 -B(x,y) | -B(y,z) | B(x,z).  [clausify(4)].
30 -P(x,y) | -B(y,z) | B(x,z).  [clausify(5)].
31 -B(x,y) | -P(y,z) | P(x,z).  [clausify(6)].
32 null = x | P(x,x).  [clausify(7)].
33 -P(x,y) | -P(y,x) | y = x.  [clausify(8)].
34 -P(x,y) | -P(y,z) | P(x,z).  [clausify(9)].
35 null != x | -P(y,x).  [clausify(10)].
36 null != x | -P(x,y).  [clausify(10)].
37 P(f2(x),x) | P(x,f2(x)) | null = x.  [clausify(10)].
38 P(c1,c1).  [resolve(14,a,15,a)].
39 -B(x,c1) | D(x,c1).  [resolve(16,a,15,a)].
40 -P(x,y) | B(f1(x,y),y) | -B(z,y) | D(z,x).  [resolve(17,c,16,a)].
41 -P(x,y) | -D(f1(x,y),x) | -B(z,y) | D(z,x).  [resolve(18,c,16,a)].
42 P(x,y) | -B(x,y).  [resolve(19,a,20,b)].
43 -P(x,y) | -B(y,x).  [resolve(21,a,20,b)].
44 P(f3(x,y),x) | D(x,y).  [resolve(25,a,23,a)].
45 P(f3(x,y),y) | D(x,y).  [resolve(26,a,23,a)].
46 -P(x,y) | -P(x,z) | -D(y,z).  [resolve(27,c,24,b)].
47 -P(x,y) | -P(x,z) | P(f3(y,z),y).  [resolve(27,c,25,a)].
48 -P(x,y) | -P(x,z) | P(f3(y,z),z).  [resolve(27,c,26,a)].
49 -P(x,y) | -D(y,y).  [factor(46,a,b)].
50 -P(x,y) | P(f3(y,y),y).  [factor(47,a,b)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=3): 28 B(c2,c1).  [clausify(1)].

given #2 (I,wt=9): 29 -B(x,y) | -B(y,z) | B(x,z).  [clausify(4)].

given #3 (I,wt=9): 30 -P(x,y) | -B(y,z) | B(x,z).  [clausify(5)].

given #4 (I,wt=9): 31 -B(x,y) | -P(y,z) | P(x,z).  [clausify(6)].

given #5 (I,wt=6): 32 null = x | P(x,x).  [clausify(7)].

given #6 (I,wt=9): 33 -P(x,y) | -P(y,x) | y = x.  [clausify(8)].

given #7 (I,wt=9): 34 -P(x,y) | -P(y,z) | P(x,z).  [clausify(9)].

given #8 (I,wt=6): 35 null != x | -P(y,x).  [clausify(10)].

given #9 (I,wt=6): 36 null != x | -P(x,y).  [clausify(10)].

given #10 (I,wt=11): 37 P(f2(x),x) | P(x,f2(x)) | null = x.  [clausify(10)].

given #11 (I,wt=3): 38 P(c1,c1).  [resolve(14,a,15,a)].

given #12 (I,wt=6): 39 -B(x,c1) | D(x,c1).  [resolve(16,a,15,a)].

given #13 (I,wt=14): 40 -P(x,y) | B(f1(x,y),y) | -B(z,y) | D(z,x).  [resolve(17,c,16,a)].

given #14 (I,wt=14): 41 -P(x,y) | -D(f1(x,y),x) | -B(z,y) | D(z,x).  [resolve(18,c,16,a)].

given #15 (I,wt=6): 42 P(x,y) | -B(x,y).  [resolve(19,a,20,b)].

given #16 (I,wt=6): 43 -P(x,y) | -B(y,x).  [resolve(21,a,20,b)].

given #17 (I,wt=8): 44 P(f3(x,y),x) | D(x,y).  [resolve(25,a,23,a)].

given #18 (I,wt=8): 45 P(f3(x,y),y) | D(x,y).  [resolve(26,a,23,a)].

given #19 (I,wt=9): 46 -P(x,y) | -P(x,z) | -D(y,z).  [resolve(27,c,24,b)].

given #20 (I,wt=11): 47 -P(x,y) | -P(x,z) | P(f3(y,z),y).  [resolve(27,c,25,a)].

given #21 (I,wt=11): 48 -P(x,y) | -P(x,z) | P(f3(y,z),z).  [resolve(27,c,26,a)].

given #22 (I,wt=6): 49 -P(x,y) | -D(y,y).  [factor(46,a,b)].

given #23 (I,wt=8): 50 -P(x,y) | P(f3(y,y),y).  [factor(47,a,b)].

given #24 (A,wt=6): 51 -B(c1,x) | B(c2,x).  [resolve(29,a,28,a)].

given #25 (F,wt=3): 55 -P(x,null).  [ur(35,a,xx)].

given #26 (F,wt=3): 56 -P(null,x).  [ur(36,a,xx)].

given #27 (F,wt=3): 60 c1 != null.  [resolve(38,a,36,b),flip(a)].

given #28 (F,wt=3): 64 -P(c1,c2).  [resolve(43,b,28,a)].

given #29 (T,wt=3): 61 D(c2,c1).  [resolve(39,a,28,a)].

given #30 (T,wt=3): 63 P(c2,c1).  [resolve(42,b,28,a)].

given #31 (T,wt=5): 81 P(f3(c1,c1),c1).  [resolve(50,a,38,a)].

given #32 (T,wt=6): 52 -B(x,c2) | B(x,c1).  [resolve(29,b,28,a)].

given #33 (A,wt=6): 53 -P(x,c2) | B(x,c1).  [resolve(30,b,28,a)].

given #34 (F,wt=3): 65 -B(c1,c1).  [ur(43,a,38,a)].

given #35 (F,wt=3): 68 -D(c1,c1).  [ur(46,a,38,a,b,38,a)].

given #36 (F,wt=3): 84 -B(x,null).  [ur(42,a,55,a)].

given #37 (F,wt=3): 85 -B(null,x).  [ur(42,a,56,a)].

given #38 (T,wt=6): 54 -P(c1,x) | P(c2,x).  [resolve(31,a,28,a)].

given #39 (T,wt=6): 93 -P(x,c2) | P(x,c1).  [resolve(63,a,34,b)].

given #40 (T,wt=8): 69 -P(c1,x) | P(f3(c1,x),c1).  [resolve(47,a,38,a)].

given #41 (T,wt=8): 72 -P(c1,x) | P(f3(x,c1),x).  [resolve(47,b,38,a)].

given #42 (A,wt=11): 57 P(x,f2(x)) | null = x | f2(x) != null.  [resolve(37,a,36,b),flip(c)].

given #43 (F,wt=3): 86 -B(c1,c2).  [ur(42,a,64,a)].

given #44 (F,wt=3): 92 c2 != null.  [resolve(63,a,36,b),flip(a)].

given #45 (F,wt=3): 94 -P(c2,c2).  [ur(46,b,63,a,c,61,a)].
-------- Proof 1 -------- 

============================== PROOF =================================

% Proof 1 at 0.02 (+ 0.01) seconds.
% Length of proof is 25.
% Level of proof is 5.
% Maximum clause weight is 9.000.
% Given clauses 45.

1 -(all x (-(exists z B(z,x)) | -I(x,x))) # label(non_clause).  [assumption].
2 (all x all y ((-I(x,y) | P(x,y) & (all z (-B(z,y) | D(z,x)))) & (-(P(x,y) & (all z (-B(z,y) | D(z,x)))) | I(x,y)))) # label(non_clause).  [assumption].
3 (all x all y (-B(x,y) | PP(x,y))) # label(non_clause).  [assumption].
7 (all x (x = null | P(x,x))) # label(non_clause).  [assumption].
10 (all x ((x != null | (all y (-P(y,x) & -P(x,y)))) & (-(all y (-P(y,x) & -P(x,y))) | x = null))) # label(non_clause).  [assumption].
11 (all x all y ((-PP(x,y) | P(x,y) & -P(y,x)) & (-(P(x,y) & -P(y,x)) | PP(x,y)))) # label(non_clause).  [assumption].
12 (all x all y ((-D(x,y) | -O(x,y)) & (O(x,y) | D(x,y)))) # label(non_clause).  [assumption].
13 (all x all y ((-O(x,y) | (exists z (P(z,x) & P(z,y)))) & (-(exists z (P(z,x) & P(z,y))) | O(x,y)))) # label(non_clause).  [assumption].
15 I(c1,c1).  [clausify(1)].
16 -I(x,y) | -B(z,y) | D(z,x).  [clausify(2)].
19 -PP(x,y) | P(x,y).  [clausify(11)].
20 -B(x,y) | PP(x,y).  [clausify(3)].
24 -D(x,y) | -O(x,y).  [clausify(12)].
27 -P(x,y) | -P(x,z) | O(y,z).  [clausify(13)].
28 B(c2,c1).  [clausify(1)].
32 null = x | P(x,x).  [clausify(7)].
36 null != x | -P(x,y).  [clausify(10)].
39 -B(x,c1) | D(x,c1).  [resolve(16,a,15,a)].
42 P(x,y) | -B(x,y).  [resolve(19,a,20,b)].
46 -P(x,y) | -P(x,z) | -D(y,z).  [resolve(27,c,24,b)].
61 D(c2,c1).  [resolve(39,a,28,a)].
63 P(c2,c1).  [resolve(42,b,28,a)].
92 c2 != null.  [resolve(63,a,36,b),flip(a)].
94 -P(c2,c2).  [ur(46,b,63,a,c,61,a)].
107 $F.  [resolve(94,a,32,b),flip(a),unit_del(a,92)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=45. Generated=176. Kept=79. proofs=1.
Usable=45. Sos=33. Demods=0. Limbo=0, Disabled=36. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=96. Back_subsumed=1.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=116. Nonunit_bsub_feature_tests=158.
Megabytes=0.18.
User_CPU=0.02, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 12457 exit (max_proofs) ------

Process 12457 exit (max_proofs) Sat Sep 19 04:49:25 2020

========================== MACLEOD SUMMARY ===========================
reasoner: /home/aidin12/macleod/Reasoning/prover9_bin/prover9
status: PROOF
execution finished: Sat Sep 19 04:49:27 2020
total CPU time used: 0
The command was "/home/aidin12/macleod/Reasoning/prover9_bin/prover9 -t100 -f /home/aidin12/macleod/ontologies/after2/Theorems/conversions/I_Irr_Bounded.all.p9"
============================ end of footer ===========================
