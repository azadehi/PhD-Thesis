============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 7682 was started by aidin12 on aidin12-HP-Pavilion-dv7-Notebook-PC,
Fri Sep 18 15:19:48 2020
The command was "/home/aidin12/macleod/Reasoning/prover9_bin/prover9 -t100 -f /home/aidin12/macleod/ontologies/after2/Theorems/conversions/Overlapproperties2.all.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /home/aidin12/macleod/ontologies/after2/Theorems/conversions/Overlapproperties2.all.p9


formulas(assumptions).
-(all x all y (-O(x,y) | O(y,x))).
(all x all y ((-O(x,y) | (exists z (P(z,x) & P(z,y)))) & (-(exists z (P(z,x) & P(z,y))) | O(x,y)))).
(all x (x = null | P(x,x))).
(all x all y (-(P(x,y) & P(y,x)) | x = y)).
(all x all y all z (-(P(x,y) & P(y,z)) | P(x,z))).
(all x ((x != null | (all y (-P(y,x) & -P(x,y)))) & (-(all y (-P(y,x) & -P(x,y))) | x = null))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 100).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 -(all x all y (-O(x,y) | O(y,x))) # label(non_clause).  [assumption].
2 (all x all y ((-O(x,y) | (exists z (P(z,x) & P(z,y)))) & (-(exists z (P(z,x) & P(z,y))) | O(x,y)))) # label(non_clause).  [assumption].
3 (all x (x = null | P(x,x))) # label(non_clause).  [assumption].
4 (all x all y (-(P(x,y) & P(y,x)) | x = y)) # label(non_clause).  [assumption].
5 (all x all y all z (-(P(x,y) & P(y,z)) | P(x,z))) # label(non_clause).  [assumption].
6 (all x ((x != null | (all y (-P(y,x) & -P(x,y)))) & (-(all y (-P(y,x) & -P(x,y))) | x = null))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
O(c1,c2).  [clausify(1)].
-O(c2,c1).  [clausify(1)].
-O(x,y) | P(f1(x,y),x).  [clausify(2)].
-O(x,y) | P(f1(x,y),y).  [clausify(2)].
-P(x,y) | -P(x,z) | O(y,z).  [clausify(2)].
null = x | P(x,x).  [clausify(3)].
-P(x,y) | -P(y,x) | y = x.  [clausify(4)].
-P(x,y) | -P(y,z) | P(x,z).  [clausify(5)].
null != x | -P(y,x).  [clausify(6)].
null != x | -P(x,y).  [clausify(6)].
P(f2(x),x) | P(x,f2(x)) | null = x.  [clausify(6)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, P, O ]).
Function symbol precedence:  function_order([ null, c1, c2, f1, f2 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      7 O(c1,c2).  [clausify(1)].
kept:      8 -O(c2,c1).  [clausify(1)].
kept:      9 -O(x,y) | P(f1(x,y),x).  [clausify(2)].
kept:      10 -O(x,y) | P(f1(x,y),y).  [clausify(2)].
kept:      11 -P(x,y) | -P(x,z) | O(y,z).  [clausify(2)].
kept:      12 null = x | P(x,x).  [clausify(3)].
kept:      13 -P(x,y) | -P(y,x) | y = x.  [clausify(4)].
kept:      14 -P(x,y) | -P(y,z) | P(x,z).  [clausify(5)].
kept:      15 null != x | -P(y,x).  [clausify(6)].
kept:      16 null != x | -P(x,y).  [clausify(6)].
kept:      17 P(f2(x),x) | P(x,f2(x)) | null = x.  [clausify(6)].
kept:      18 -P(x,y) | O(y,y).  [factor(11,a,b)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
7 O(c1,c2).  [clausify(1)].
8 -O(c2,c1).  [clausify(1)].
9 -O(x,y) | P(f1(x,y),x).  [clausify(2)].
10 -O(x,y) | P(f1(x,y),y).  [clausify(2)].
11 -P(x,y) | -P(x,z) | O(y,z).  [clausify(2)].
12 null = x | P(x,x).  [clausify(3)].
13 -P(x,y) | -P(y,x) | y = x.  [clausify(4)].
14 -P(x,y) | -P(y,z) | P(x,z).  [clausify(5)].
15 null != x | -P(y,x).  [clausify(6)].
16 null != x | -P(x,y).  [clausify(6)].
17 P(f2(x),x) | P(x,f2(x)) | null = x.  [clausify(6)].
18 -P(x,y) | O(y,y).  [factor(11,a,b)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

given #1 (I,wt=3): 7 O(c1,c2).  [clausify(1)].

given #2 (I,wt=3): 8 -O(c2,c1).  [clausify(1)].

given #3 (I,wt=8): 9 -O(x,y) | P(f1(x,y),x).  [clausify(2)].

given #4 (I,wt=8): 10 -O(x,y) | P(f1(x,y),y).  [clausify(2)].

given #5 (I,wt=9): 11 -P(x,y) | -P(x,z) | O(y,z).  [clausify(2)].

given #6 (I,wt=6): 12 null = x | P(x,x).  [clausify(3)].

given #7 (I,wt=9): 13 -P(x,y) | -P(y,x) | y = x.  [clausify(4)].

given #8 (I,wt=9): 14 -P(x,y) | -P(y,z) | P(x,z).  [clausify(5)].

given #9 (I,wt=6): 15 null != x | -P(y,x).  [clausify(6)].

given #10 (I,wt=6): 16 null != x | -P(x,y).  [clausify(6)].

given #11 (I,wt=11): 17 P(f2(x),x) | P(x,f2(x)) | null = x.  [clausify(6)].

given #12 (I,wt=6): 18 -P(x,y) | O(y,y).  [factor(11,a,b)].

given #13 (A,wt=5): 19 P(f1(c1,c2),c1).  [resolve(9,a,7,a)].
-------- Proof 1 -------- 

============================== PROOF =================================

% Proof 1 at 0.02 (+ 0.00) seconds.
% Length of proof is 10.
% Level of proof is 3.
% Maximum clause weight is 9.000.
% Given clauses 13.

1 -(all x all y (-O(x,y) | O(y,x))) # label(non_clause).  [assumption].
2 (all x all y ((-O(x,y) | (exists z (P(z,x) & P(z,y)))) & (-(exists z (P(z,x) & P(z,y))) | O(x,y)))) # label(non_clause).  [assumption].
7 O(c1,c2).  [clausify(1)].
8 -O(c2,c1).  [clausify(1)].
9 -O(x,y) | P(f1(x,y),x).  [clausify(2)].
10 -O(x,y) | P(f1(x,y),y).  [clausify(2)].
11 -P(x,y) | -P(x,z) | O(y,z).  [clausify(2)].
19 P(f1(c1,c2),c1).  [resolve(9,a,7,a)].
20 P(f1(c1,c2),c2).  [resolve(10,a,7,a)].
40 $F.  [ur(11,b,19,a,c,8,a),unit_del(a,20)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=13. Generated=48. Kept=33. proofs=1.
Usable=13. Sos=11. Demods=0. Limbo=8, Disabled=12. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=14. Back_subsumed=1.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=24. Nonunit_bsub_feature_tests=40.
Megabytes=0.09.
User_CPU=0.02, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 7682 exit (max_proofs) ------

Process 7682 exit (max_proofs) Fri Sep 18 15:19:48 2020

========================== MACLEOD SUMMARY ===========================
reasoner: /home/aidin12/macleod/Reasoning/prover9_bin/prover9
status: PROOF
execution finished: Fri Sep 18 15:19:50 2020
total CPU time used: 0
The command was "/home/aidin12/macleod/Reasoning/prover9_bin/prover9 -t100 -f /home/aidin12/macleod/ontologies/after2/Theorems/conversions/Overlapproperties2.all.p9"
============================ end of footer ===========================
