============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 15339 was started by aidin12 on aidin12-HP-Pavilion-dv7-Notebook-PC,
Wed May 20 16:16:57 2020
The command was "/home/aidin12/macleod/Reasoning/prover9_bin/mace4 -v0 -t300 -s60 -n2 -N40 -f /home/aidin12/macleod/ontologies/after/Lattice/conversions/Lattice.all.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /home/aidin12/macleod/ontologies/after/Lattice/conversions/Lattice.all.p9


formulas(assumptions).
-(all x all y (O(x,y) | D(x,y))).
-(all x all y (-IMB(x,y) | O(x,y))).
-(all x all y (-P(x,y) | O(x,y))).
-(all x all y (-PI(x,y) | O(x,y))).
-(all x all y (-PP(x,y) | P(x,y))).
-(all x all y (-PPI(x,y) | PI(x,y))).
-(all x all y (-I(x,y) | P(x,y))).
-(all x all y (-TPP(x,y) | PP(x,y))).
-(all x all y (-TPPI(x,y) | PPI(x,y))).
-(all x all y (-II(x,y) | PI(x,y))).
-(all x all y (-EQ(x,y) | P(x,y))).
-(all x all y (-EQ(x,y) | PI(x,y))).
-(all x all y (-OV(x,y) | IMB(x,y))).
-(all x all y (-IC(x,y) | IMB(x,y))).
-(all x all y (-EC(x,y) | IMB(x,y))).
-(all x all y ((-O(x,y) | IMB(x,y) | P(x,y) | PI(x,y)) & (-(IMB(x,y) | P(x,y) | PI(x,y)) | O(x,y)))).
-(all x all y ((-P(x,y) | I(x,y) | PP(x,y) | EQ(x,y)) & (-(I(x,y) | PP(x,y) | EQ(x,y)) | P(x,y)))).
-(all x all y ((-PI(x,y) | II(x,y) | PPI(x,y) | EQ(x,y)) & (-(II(x,y) | PPI(x,y) | EQ(x,y)) | PI(x,y)))).
-(all x all y ((-IMB(x,y) | OV(x,y) | IC(x,y) | EC(x,y)) & (-(OV(x,y) | IC(x,y) | EC(x,y)) | IMB(x,y)))).
(all x (x = null | P(x,x))).
(all x all y (-(P(x,y) & P(y,x)) | x = y)).
(all x all y all z (-(P(x,y) & P(y,z)) | P(x,z))).
(all x ((x != null | (all y (-P(y,x) & -P(x,y)))) & (-(all y (-P(y,x) & -P(x,y))) | x = null))).
(all x all y ((-PI(x,y) | P(y,x)) & (-P(y,x) | PI(x,y)))).
(all x all y (-PP(x,y) | (exists z (P(z,y) & D(z,x))))).
(exists z all x (x = null | P(x,z))).
(all x ((x != cuniversal | (all y (y = null | P(y,x)))) & (-(all y (y = null | P(y,x))) | x = cuniversal))).
-(exists x B(x,cuniversal)).
(all x ((-Point(x) | x != null & (all y (-P(y,x) | EQ(x,y)))) & (-(x != null & (all y (-P(y,x) | EQ(x,y)))) | Point(x)))).
(all x all y ((-PP(x,y) | P(x,y) & -P(y,x)) & (-(P(x,y) & -P(y,x)) | PP(x,y)))).
(all x all y ((-PPI(x,y) | PP(y,x)) & (-PP(y,x) | PPI(x,y)))).
(all x all y ((-EQ(x,y) | P(y,x) & P(x,y)) & (-(P(y,x) & P(x,y)) | EQ(x,y)))).
(all x all y ((-O(x,y) | (exists z (P(z,x) & P(z,y)))) & (-(exists z (P(z,x) & P(z,y))) | O(x,y)))).
(all x all y ((-D(x,y) | -O(x,y)) & (O(x,y) | D(x,y)))).
(all x all y (-B(x,y) | PP(x,y))).
(all x all y all z (-(B(x,y) & B(y,z)) | B(x,z))).
(all x all y all z (-(P(x,y) & B(y,z)) | B(x,z))).
(all x all y all z (-(B(x,y) & P(y,z)) | P(x,z))).
(all x all y ((-IMB(x,y) | O(x,y) & -P(x,y) & -P(y,x)) & (-(O(x,y) & -P(x,y) & -P(y,x)) | IMB(x,y)))).
(all x all y ((-I(x,y) | P(x,y) & (all z (-B(z,y) | D(z,x)))) & (-(P(x,y) & (all z (-B(z,y) | D(z,x)))) | I(x,y)))).
(all x all y ((-II(x,y) | I(y,x)) & (-I(y,x) | II(x,y)))).
(all x all y ((-TPP(x,y) | PP(x,y) & (exists z (P(z,x) & B(z,y)))) & (-(PP(x,y) & (exists z (P(z,x) & B(z,y)))) | TPP(x,y)))).
(all x all y ((-TPPI(x,y) | TPP(y,x)) & (-TPP(y,x) | TPPI(x,y)))).
(all x all y ((-OV(x,y) | IMB(x,y) & (exists p (I(p,x) & I(p,y)))) & (-(IMB(x,y) & (exists p (I(p,x) & I(p,y)))) | OV(x,y)))).
(all x all y ((-EC(x,y) | IMB(x,y) & (all z (-(P(z,x) & P(z,y)) | B(z,x) & B(z,y)))) & (-(IMB(x,y) & (all z (-(P(z,x) & P(z,y)) | B(z,x) & B(z,y)))) | EC(x,y)))).
(all x all y ((-IC(x,y) | IMB(x,y) & -EC(x,y) & -(exists p (I(p,x) & I(p,y)))) & (-(IMB(x,y) & -EC(x,y) & -(exists p (I(p,x) & I(p,y)))) | IC(x,y)))).
(all x (x = null | (exists y I(y,x)))).
(all x ((exists z B(z,x)) | -(exists y EC(y,x)))).
(all x (-(exists z B(z,x)) | (all y (-B(y,x) | -I(y,x))))).
(all x (-(exists z B(z,x)) | (all y (-I(y,x) | -B(y,x))))).
(all x all y (-((exists z B(z,x)) & EQ(x,y)) | (exists t B(t,y)))).
(all x all y (-(-(exists z B(z,x)) & EQ(x,y)) | -(exists t B(t,y)))).
(all x all y (-(-(exists z B(z,x)) & (exists t B(t,y))) | -EQ(x,y))).
(all x all y (-(PP(x,y) & -(exists z B(z,y))) | IP(x,y))).
(all x all y all w ((-O(w,sum(x,y)) | O(w,x) | O(w,y)) & (-(O(w,x) | O(w,y)) | O(w,sum(x,y))))).
(all x all y all w ((-P(w,prod(x,y)) | P(w,x) & P(w,y)) & (-(P(w,x) & P(w,y)) | P(w,prod(x,y))))).
(all x all w ((-P(w,compl(x)) | D(w,x) & P(w,compl(x))) & (-(D(w,x) & P(w,compl(x))) | P(w,compl(x))))).
(all x all y all w ((-P(w,diff(x,y)) | P(w,x) & D(w,y)) & (-(P(w,x) & D(w,y)) | P(w,diff(x,y))))).
(all x all z all t (-(compl(x) = z & compl(x) = t) | z = t)).
(all x all y all z all t (-(diff(x,y) = z & diff(x,y) = t) | z = t)).
(all x all y all z all t (-(prod(x,y) = z & prod(x,y) = t) | z = t)).
(all x all y all z all t (-(sum(x,y) = z & sum(x,y) = t) | z = t)).
(all x all y (-(x != null & y != null) | (exists z (z != null & z = sum(x,y))))).
(all x all y sum(x,y) = sum(y,x)).
(all x ((compl(x) != null | x = cuniversal) & (x != cuniversal | compl(x) = null))).
(all x ((compl(x) != cuniversal | x = null) & (x != null | compl(x) = cuniversal))).
(all x all y prod(x,y) = prod(y,x)).
(all x all y (diff(x,y) != null | x = null | P(x,y))).
(all x all y (-D(x,y) | diff(x,y) = x)).
(all x (-P(x,cuniversal) | diff(x,null) = x)).
(all x (-P(x,cuniversal) | sum(null,x) = x)).
(all x (x = null | (exists z (I(z,x) & (all u (-I(u,x) | I(u,z))) & -(exists y B(y,z)))))).
(all x (bdy(x) = null | B(bdy(x),x) & (all z (-B(z,x) | P(z,bdy(x)))))).
(all x ((bdy(x) != null | null = x | x = cuniversal | Point(x) | (all z (-P(z,x) | I(z,x)))) & (-(null = x | x = cuniversal | Point(x) | (all z (-P(z,x) | I(z,x)))) | bdy(x) = null))).
(all x all y all z (-(bdy(x) = y & bdy(x) = z) | z = y)).
(all x all w ((-O(w,bdy(x)) | (exists v (O(v,w) & B(v,x)))) & (-(exists v (O(v,w) & B(v,x))) | O(w,bdy(x))))).
(all x ((-SpatialEntity(x) | x != null & x != cuniversal & -Point(x) & P(x,cuniversal)) & (-(x != null & x != cuniversal & -Point(x) & P(x,cuniversal)) | SpatialEntity(x)))).
(all x ((x != null | -P(x,x)) & (P(x,x) | x = null))).
(all x ((-P(x,x) | x != null) & (x = null | P(x,x)))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 300).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 -(all x all y (O(x,y) | D(x,y))) # label(non_clause).  [assumption].
2 -(all x all y (-IMB(x,y) | O(x,y))) # label(non_clause).  [assumption].
3 -(all x all y (-P(x,y) | O(x,y))) # label(non_clause).  [assumption].
4 -(all x all y (-PI(x,y) | O(x,y))) # label(non_clause).  [assumption].
5 -(all x all y (-PP(x,y) | P(x,y))) # label(non_clause).  [assumption].
6 -(all x all y (-PPI(x,y) | PI(x,y))) # label(non_clause).  [assumption].
7 -(all x all y (-I(x,y) | P(x,y))) # label(non_clause).  [assumption].
8 -(all x all y (-TPP(x,y) | PP(x,y))) # label(non_clause).  [assumption].
9 -(all x all y (-TPPI(x,y) | PPI(x,y))) # label(non_clause).  [assumption].
10 -(all x all y (-II(x,y) | PI(x,y))) # label(non_clause).  [assumption].
11 -(all x all y (-EQ(x,y) | P(x,y))) # label(non_clause).  [assumption].
12 -(all x all y (-EQ(x,y) | PI(x,y))) # label(non_clause).  [assumption].
13 -(all x all y (-OV(x,y) | IMB(x,y))) # label(non_clause).  [assumption].
14 -(all x all y (-IC(x,y) | IMB(x,y))) # label(non_clause).  [assumption].
15 -(all x all y (-EC(x,y) | IMB(x,y))) # label(non_clause).  [assumption].
16 -(all x all y ((-O(x,y) | IMB(x,y) | P(x,y) | PI(x,y)) & (-(IMB(x,y) | P(x,y) | PI(x,y)) | O(x,y)))) # label(non_clause).  [assumption].
17 -(all x all y ((-P(x,y) | I(x,y) | PP(x,y) | EQ(x,y)) & (-(I(x,y) | PP(x,y) | EQ(x,y)) | P(x,y)))) # label(non_clause).  [assumption].
18 -(all x all y ((-PI(x,y) | II(x,y) | PPI(x,y) | EQ(x,y)) & (-(II(x,y) | PPI(x,y) | EQ(x,y)) | PI(x,y)))) # label(non_clause).  [assumption].
19 -(all x all y ((-IMB(x,y) | OV(x,y) | IC(x,y) | EC(x,y)) & (-(OV(x,y) | IC(x,y) | EC(x,y)) | IMB(x,y)))) # label(non_clause).  [assumption].
20 (all x (x = null | P(x,x))) # label(non_clause).  [assumption].
21 (all x all y (-(P(x,y) & P(y,x)) | x = y)) # label(non_clause).  [assumption].
22 (all x all y all z (-(P(x,y) & P(y,z)) | P(x,z))) # label(non_clause).  [assumption].
23 (all x ((x != null | (all y (-P(y,x) & -P(x,y)))) & (-(all y (-P(y,x) & -P(x,y))) | x = null))) # label(non_clause).  [assumption].
24 (all x all y ((-PI(x,y) | P(y,x)) & (-P(y,x) | PI(x,y)))) # label(non_clause).  [assumption].
25 (all x all y (-PP(x,y) | (exists z (P(z,y) & D(z,x))))) # label(non_clause).  [assumption].
26 (exists z all x (x = null | P(x,z))) # label(non_clause).  [assumption].
27 (all x ((x != cuniversal | (all y (y = null | P(y,x)))) & (-(all y (y = null | P(y,x))) | x = cuniversal))) # label(non_clause).  [assumption].
28 -(exists x B(x,cuniversal)) # label(non_clause).  [assumption].
29 (all x ((-Point(x) | x != null & (all y (-P(y,x) | EQ(x,y)))) & (-(x != null & (all y (-P(y,x) | EQ(x,y)))) | Point(x)))) # label(non_clause).  [assumption].
30 (all x all y ((-PP(x,y) | P(x,y) & -P(y,x)) & (-(P(x,y) & -P(y,x)) | PP(x,y)))) # label(non_clause).  [assumption].
31 (all x all y ((-PPI(x,y) | PP(y,x)) & (-PP(y,x) | PPI(x,y)))) # label(non_clause).  [assumption].
32 (all x all y ((-EQ(x,y) | P(y,x) & P(x,y)) & (-(P(y,x) & P(x,y)) | EQ(x,y)))) # label(non_clause).  [assumption].
33 (all x all y ((-O(x,y) | (exists z (P(z,x) & P(z,y)))) & (-(exists z (P(z,x) & P(z,y))) | O(x,y)))) # label(non_clause).  [assumption].
34 (all x all y ((-D(x,y) | -O(x,y)) & (O(x,y) | D(x,y)))) # label(non_clause).  [assumption].
35 (all x all y (-B(x,y) | PP(x,y))) # label(non_clause).  [assumption].
36 (all x all y all z (-(B(x,y) & B(y,z)) | B(x,z))) # label(non_clause).  [assumption].
37 (all x all y all z (-(P(x,y) & B(y,z)) | B(x,z))) # label(non_clause).  [assumption].
38 (all x all y all z (-(B(x,y) & P(y,z)) | P(x,z))) # label(non_clause).  [assumption].
39 (all x all y ((-IMB(x,y) | O(x,y) & -P(x,y) & -P(y,x)) & (-(O(x,y) & -P(x,y) & -P(y,x)) | IMB(x,y)))) # label(non_clause).  [assumption].
40 (all x all y ((-I(x,y) | P(x,y) & (all z (-B(z,y) | D(z,x)))) & (-(P(x,y) & (all z (-B(z,y) | D(z,x)))) | I(x,y)))) # label(non_clause).  [assumption].
41 (all x all y ((-II(x,y) | I(y,x)) & (-I(y,x) | II(x,y)))) # label(non_clause).  [assumption].
42 (all x all y ((-TPP(x,y) | PP(x,y) & (exists z (P(z,x) & B(z,y)))) & (-(PP(x,y) & (exists z (P(z,x) & B(z,y)))) | TPP(x,y)))) # label(non_clause).  [assumption].
43 (all x all y ((-TPPI(x,y) | TPP(y,x)) & (-TPP(y,x) | TPPI(x,y)))) # label(non_clause).  [assumption].
44 (all x all y ((-OV(x,y) | IMB(x,y) & (exists p (I(p,x) & I(p,y)))) & (-(IMB(x,y) & (exists p (I(p,x) & I(p,y)))) | OV(x,y)))) # label(non_clause).  [assumption].
45 (all x all y ((-EC(x,y) | IMB(x,y) & (all z (-(P(z,x) & P(z,y)) | B(z,x) & B(z,y)))) & (-(IMB(x,y) & (all z (-(P(z,x) & P(z,y)) | B(z,x) & B(z,y)))) | EC(x,y)))) # label(non_clause).  [assumption].
46 (all x all y ((-IC(x,y) | IMB(x,y) & -EC(x,y) & -(exists p (I(p,x) & I(p,y)))) & (-(IMB(x,y) & -EC(x,y) & -(exists p (I(p,x) & I(p,y)))) | IC(x,y)))) # label(non_clause).  [assumption].
47 (all x (x = null | (exists y I(y,x)))) # label(non_clause).  [assumption].
48 (all x ((exists z B(z,x)) | -(exists y EC(y,x)))) # label(non_clause).  [assumption].
49 (all x (-(exists z B(z,x)) | (all y (-B(y,x) | -I(y,x))))) # label(non_clause).  [assumption].
50 (all x (-(exists z B(z,x)) | (all y (-I(y,x) | -B(y,x))))) # label(non_clause).  [assumption].
51 (all x all y (-((exists z B(z,x)) & EQ(x,y)) | (exists t B(t,y)))) # label(non_clause).  [assumption].
52 (all x all y (-(-(exists z B(z,x)) & EQ(x,y)) | -(exists t B(t,y)))) # label(non_clause).  [assumption].
53 (all x all y (-(-(exists z B(z,x)) & (exists t B(t,y))) | -EQ(x,y))) # label(non_clause).  [assumption].
54 (all x all y (-(PP(x,y) & -(exists z B(z,y))) | IP(x,y))) # label(non_clause).  [assumption].
55 (all x all y all w ((-O(w,sum(x,y)) | O(w,x) | O(w,y)) & (-(O(w,x) | O(w,y)) | O(w,sum(x,y))))) # label(non_clause).  [assumption].
56 (all x all y all w ((-P(w,prod(x,y)) | P(w,x) & P(w,y)) & (-(P(w,x) & P(w,y)) | P(w,prod(x,y))))) # label(non_clause).  [assumption].
57 (all x all w ((-P(w,compl(x)) | D(w,x) & P(w,compl(x))) & (-(D(w,x) & P(w,compl(x))) | P(w,compl(x))))) # label(non_clause).  [assumption].
58 (all x all y all w ((-P(w,diff(x,y)) | P(w,x) & D(w,y)) & (-(P(w,x) & D(w,y)) | P(w,diff(x,y))))) # label(non_clause).  [assumption].
59 (all x all z all t (-(compl(x) = z & compl(x) = t) | z = t)) # label(non_clause).  [assumption].
60 (all x all y all z all t (-(diff(x,y) = z & diff(x,y) = t) | z = t)) # label(non_clause).  [assumption].
61 (all x all y all z all t (-(prod(x,y) = z & prod(x,y) = t) | z = t)) # label(non_clause).  [assumption].
62 (all x all y all z all t (-(sum(x,y) = z & sum(x,y) = t) | z = t)) # label(non_clause).  [assumption].
63 (all x all y (-(x != null & y != null) | (exists z (z != null & z = sum(x,y))))) # label(non_clause).  [assumption].
64 (all x all y sum(x,y) = sum(y,x)) # label(non_clause).  [assumption].
65 (all x ((compl(x) != null | x = cuniversal) & (x != cuniversal | compl(x) = null))) # label(non_clause).  [assumption].
66 (all x ((compl(x) != cuniversal | x = null) & (x != null | compl(x) = cuniversal))) # label(non_clause).  [assumption].
67 (all x all y prod(x,y) = prod(y,x)) # label(non_clause).  [assumption].
68 (all x all y (diff(x,y) != null | x = null | P(x,y))) # label(non_clause).  [assumption].
69 (all x all y (-D(x,y) | diff(x,y) = x)) # label(non_clause).  [assumption].
70 (all x (-P(x,cuniversal) | diff(x,null) = x)) # label(non_clause).  [assumption].
71 (all x (-P(x,cuniversal) | sum(null,x) = x)) # label(non_clause).  [assumption].
72 (all x (x = null | (exists z (I(z,x) & (all u (-I(u,x) | I(u,z))) & -(exists y B(y,z)))))) # label(non_clause).  [assumption].
73 (all x (bdy(x) = null | B(bdy(x),x) & (all z (-B(z,x) | P(z,bdy(x)))))) # label(non_clause).  [assumption].
74 (all x ((bdy(x) != null | null = x | x = cuniversal | Point(x) | (all z (-P(z,x) | I(z,x)))) & (-(null = x | x = cuniversal | Point(x) | (all z (-P(z,x) | I(z,x)))) | bdy(x) = null))) # label(non_clause).  [assumption].
75 (all x all y all z (-(bdy(x) = y & bdy(x) = z) | z = y)) # label(non_clause).  [assumption].
76 (all x all w ((-O(w,bdy(x)) | (exists v (O(v,w) & B(v,x)))) & (-(exists v (O(v,w) & B(v,x))) | O(w,bdy(x))))) # label(non_clause).  [assumption].
77 (all x ((-SpatialEntity(x) | x != null & x != cuniversal & -Point(x) & P(x,cuniversal)) & (-(x != null & x != cuniversal & -Point(x) & P(x,cuniversal)) | SpatialEntity(x)))) # label(non_clause).  [assumption].
78 (all x ((x != null | -P(x,x)) & (P(x,x) | x = null))) # label(non_clause).  [assumption].
79 (all x ((-P(x,x) | x != null) & (x = null | P(x,x)))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-O(c1,c2).
-D(c1,c2).
IMB(c3,c4).
-O(c3,c4).
P(c5,c6).
-O(c5,c6).
PI(c7,c8).
-O(c7,c8).
PP(c9,c10).
-P(c9,c10).
PPI(c11,c12).
-PI(c11,c12).
I(c13,c14).
-P(c13,c14).
TPP(c15,c16).
-PP(c15,c16).
TPPI(c17,c18).
-PPI(c17,c18).
II(c19,c20).
-PI(c19,c20).
EQ(c21,c22).
-P(c21,c22).
EQ(c23,c24).
-PI(c23,c24).
OV(c25,c26).
-IMB(c25,c26).
IC(c27,c28).
-IMB(c27,c28).
EC(c29,c30).
-IMB(c29,c30).
O(c31,c32) | IMB(c31,c32) | P(c31,c32) | PI(c31,c32).
-IMB(c31,c32) | -O(c31,c32).
-P(c31,c32) | -O(c31,c32).
-PI(c31,c32) | -O(c31,c32).
P(c33,c34) | I(c33,c34) | PP(c33,c34) | EQ(c33,c34).
-I(c33,c34) | -P(c33,c34).
-PP(c33,c34) | -P(c33,c34).
-EQ(c33,c34) | -P(c33,c34).
PI(c35,c36) | II(c35,c36) | PPI(c35,c36) | EQ(c35,c36).
-II(c35,c36) | -PI(c35,c36).
-PPI(c35,c36) | -PI(c35,c36).
-EQ(c35,c36) | -PI(c35,c36).
IMB(c37,c38) | OV(c37,c38) | IC(c37,c38) | EC(c37,c38).
-OV(c37,c38) | -IMB(c37,c38).
-IC(c37,c38) | -IMB(c37,c38).
-EC(c37,c38) | -IMB(c37,c38).
null = x | P(x,x).
-P(x,y) | -P(y,x) | y = x.
-P(x,y) | -P(y,z) | P(x,z).
null != x | -P(y,x).
null != x | -P(x,y).
P(f1(x),x) | P(x,f1(x)) | null = x.
-PI(x,y) | P(y,x).
-P(x,y) | PI(y,x).
-PP(x,y) | P(f2(x,y),y).
-PP(x,y) | D(f2(x,y),x).
null = x | P(x,c39).
cuniversal != x | null = y | P(y,x).
null != f3(x) | cuniversal = x.
-P(f3(x),x) | cuniversal = x.
-B(x,cuniversal).
-Point(x) | null != x.
-Point(x) | -P(y,x) | EQ(x,y).
null = x | P(f4(x),x) | Point(x).
null = x | -EQ(x,f4(x)) | Point(x).
-PP(x,y) | P(x,y).
-PP(x,y) | -P(y,x).
-P(x,y) | P(y,x) | PP(x,y).
-PPI(x,y) | PP(y,x).
-PP(x,y) | PPI(y,x).
-EQ(x,y) | P(y,x).
-EQ(x,y) | P(x,y).
-P(x,y) | -P(y,x) | EQ(y,x).
-O(x,y) | P(f5(x,y),x).
-O(x,y) | P(f5(x,y),y).
-P(x,y) | -P(x,z) | O(y,z).
-D(x,y) | -O(x,y).
O(x,y) | D(x,y).
-B(x,y) | PP(x,y).
-B(x,y) | -B(y,z) | B(x,z).
-P(x,y) | -B(y,z) | B(x,z).
-B(x,y) | -P(y,z) | P(x,z).
-IMB(x,y) | O(x,y).
-IMB(x,y) | -P(x,y).
-IMB(x,y) | -P(y,x).
-O(x,y) | P(x,y) | P(y,x) | IMB(x,y).
-I(x,y) | P(x,y).
-I(x,y) | -B(z,y) | D(z,x).
-P(x,y) | B(f6(x,y),y) | I(x,y).
-P(x,y) | -D(f6(x,y),x) | I(x,y).
-II(x,y) | I(y,x).
-I(x,y) | II(y,x).
-TPP(x,y) | PP(x,y).
-TPP(x,y) | P(f7(x,y),x).
-TPP(x,y) | B(f7(x,y),y).
-PP(x,y) | -P(z,x) | -B(z,y) | TPP(x,y).
-TPPI(x,y) | TPP(y,x).
-TPP(x,y) | TPPI(y,x).
-OV(x,y) | IMB(x,y).
-OV(x,y) | I(f8(x,y),x).
-OV(x,y) | I(f8(x,y),y).
-IMB(x,y) | -I(z,x) | -I(z,y) | OV(x,y).
-EC(x,y) | IMB(x,y).
-EC(x,y) | -P(z,x) | -P(z,y) | B(z,x).
-EC(x,y) | -P(z,x) | -P(z,y) | B(z,y).
-IMB(x,y) | P(f9(x,y),x) | EC(x,y).
-IMB(x,y) | P(f9(x,y),y) | EC(x,y).
-IMB(x,y) | -B(f9(x,y),x) | -B(f9(x,y),y) | EC(x,y).
-IC(x,y) | IMB(x,y).
-IC(x,y) | -EC(x,y).
-IC(x,y) | -I(z,x) | -I(z,y).
-IMB(x,y) | EC(x,y) | I(f10(x,y),x) | IC(x,y).
-IMB(x,y) | EC(x,y) | I(f10(x,y),y) | IC(x,y).
null = x | I(f11(x),x).
B(f12(x),x) | -EC(y,x).
-B(x,y) | -B(z,y) | -I(z,y).
-B(x,y) | -I(z,y) | -B(z,y).
-B(x,y) | -EQ(y,z) | B(f13(y,z),z).
B(f14(x,y),x) | -EQ(x,y) | -B(z,y).
B(f15(x,y),x) | -B(z,y) | -EQ(x,y).
-PP(x,y) | B(f16(x,y),y) | IP(x,y).
-O(x,sum(y,z)) | O(x,y) | O(x,z).
-O(x,y) | O(x,sum(y,z)).
-O(x,y) | O(x,sum(z,y)).
-P(x,prod(y,z)) | P(x,y).
-P(x,prod(y,z)) | P(x,z).
-P(x,y) | -P(x,z) | P(x,prod(y,z)).
-P(x,compl(y)) | D(x,y).
-P(x,diff(y,z)) | P(x,y).
-P(x,diff(y,z)) | D(x,z).
-P(x,y) | -D(x,z) | P(x,diff(y,z)).
compl(x) != y | compl(x) != z | z = y.
diff(x,y) != z | diff(x,y) != u | u = z.
prod(x,y) != z | prod(x,y) != u | u = z.
sum(x,y) != z | sum(x,y) != u | u = z.
null = x | null = y | f17(x,y) != null.
null = x | null = y | sum(x,y) = f17(x,y).
sum(x,y) = sum(y,x).
compl(x) != null | cuniversal = x.
cuniversal != x | compl(x) = null.
compl(x) != cuniversal | null = x.
null != x | compl(x) = cuniversal.
prod(x,y) = prod(y,x).
diff(x,y) != null | null = x | P(x,y).
-D(x,y) | diff(x,y) = x.
-P(x,cuniversal) | diff(x,null) = x.
-P(x,cuniversal) | sum(null,x) = x.
null = x | I(f18(x),x).
null = x | -I(y,x) | I(y,f18(x)).
null = x | -B(y,f18(x)).
bdy(x) = null | B(bdy(x),x).
bdy(x) = null | -B(y,x) | P(y,bdy(x)).
bdy(x) != null | null = x | cuniversal = x | Point(x) | -P(y,x) | I(y,x).
null != x | bdy(x) = null.
cuniversal != x | bdy(x) = null.
-Point(x) | bdy(x) = null.
P(f19(x),x) | bdy(x) = null.
-I(f19(x),x) | bdy(x) = null.
bdy(x) != y | bdy(x) != z | z = y.
-O(x,bdy(y)) | O(f20(y,x),x).
-O(x,bdy(y)) | B(f20(y,x),y).
-O(x,y) | -B(x,z) | O(y,bdy(z)).
-SpatialEntity(x) | null != x.
-SpatialEntity(x) | cuniversal != x.
-SpatialEntity(x) | -Point(x).
-SpatialEntity(x) | P(x,cuniversal).
null = x | cuniversal = x | Point(x) | -P(x,cuniversal) | SpatialEntity(x).
null != x | -P(x,x).
P(x,x) | null = x.
-P(x,x) | null != x.
null = x | P(x,x).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=630, kept=596.
Selections=4, assignments=7, propagations=95, current_models=0.
Rewrite_terms=502, rewrite_bools=771, indexes=48.
Rules_from_neg_clauses=20, cross_offs=20.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=1699, kept=1597.
Selections=2, assignments=3, propagations=118, current_models=0.
Rewrite_terms=769, rewrite_bools=1505, indexes=49.
Rules_from_neg_clauses=10, cross_offs=52.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.03 seconds).
Ground clauses: seen=3726, kept=3498.
Selections=263, assignments=1046, propagations=2375, current_models=0.
Rewrite_terms=5244, rewrite_bools=16754, indexes=999.
Rules_from_neg_clauses=355, cross_offs=1123.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

=== Mace4 starting on domain size 5. ===

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 0.07 seconds).
Ground clauses: seen=7131, kept=6701.
Selections=474, assignments=2360, propagations=11218, current_models=0.
Rewrite_terms=84676, rewrite_bools=115037, indexes=4195.
Rules_from_neg_clauses=1834, cross_offs=6411.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

=== Mace4 starting on domain size 6. ===

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 0.32 seconds).
Ground clauses: seen=12406, kept=11680.
Selections=1247, assignments=6945, propagations=68451, current_models=0.
Rewrite_terms=720035, rewrite_bools=926995, indexes=20960.
Rules_from_neg_clauses=8386, cross_offs=59697.

============================== end of statistics =====================

============================== DOMAIN SIZE 7 =========================

=== Mace4 starting on domain size 7. ===

============================== STATISTICS ============================

For domain size 7.

Current CPU time: 0.00 seconds (total CPU time: 1.08 seconds).
Ground clauses: seen=20115, kept=18981.
Selections=2125, assignments=13280, propagations=196062, current_models=0.
Rewrite_terms=2541065, rewrite_bools=3362556, indexes=59615.
Rules_from_neg_clauses=21148, cross_offs=242140.

============================== end of statistics =====================

============================== DOMAIN SIZE 8 =========================

=== Mace4 starting on domain size 8. ===

========================== MACLEOD SUMMARY ===========================
reasoner: /home/aidin12/macleod/Reasoning/prover9_bin/mace4
status: 
execution finished: Wed May 20 16:17:00 2020
total CPU time used: 0
The command was "/home/aidin12/macleod/Reasoning/prover9_bin/mace4 -v0 -t300 -s60 -n2 -N40 -f /home/aidin12/macleod/ontologies/after/Lattice/conversions/Lattice.all.p9"
============================ end of footer ===========================
